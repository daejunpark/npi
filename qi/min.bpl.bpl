const N: int;
axiom 0 <= N;
 
procedure main()
{ 
var a: [int]int;
var n, min: int;
 
// Find the minimum element of the array
n := 0;
while (n < N)
invariant b1 ==> N - N == 0;
invariant b2 ==> N - N == 1;
invariant b3 ==> N - N <= 0;
invariant b4 ==> N - N <= 1;
invariant b5 ==> N - n == 0;
invariant b6 ==> N - n == 1;
invariant b7 ==> N - n <= 0;
invariant b8 ==> N - n <= 1;
invariant b9 ==> N - min == 0;
invariant b10 ==> N - min == 1;
invariant b11 ==> N - min <= 0;
invariant b12 ==> N - min <= 1;
invariant b13 ==> N - 0 == 0;
invariant b14 ==> N - 0 == 1;
invariant b15 ==> N - 0 <= 0;
invariant b16 ==> N - 0 <= 1;
invariant b17 ==> n - N == 0;
invariant b18 ==> n - N == 1;
invariant b19 ==> n - N <= 0;
invariant b20 ==> n - N <= 1;
invariant b21 ==> n - n == 0;
invariant b22 ==> n - n == 1;
invariant b23 ==> n - n <= 0;
invariant b24 ==> n - n <= 1;
invariant b25 ==> n - min == 0;
invariant b26 ==> n - min == 1;
invariant b27 ==> n - min <= 0;
invariant b28 ==> n - min <= 1;
invariant b29 ==> n - 0 == 0;
invariant b30 ==> n - 0 == 1;
invariant b31 ==> n - 0 <= 0;
invariant b32 ==> n - 0 <= 1;
invariant b33 ==> min - N == 0;
invariant b34 ==> min - N == 1;
invariant b35 ==> min - N <= 0;
invariant b36 ==> min - N <= 1;
invariant b37 ==> min - n == 0;
invariant b38 ==> min - n == 1;
invariant b39 ==> min - n <= 0;
invariant b40 ==> min - n <= 1;
invariant b41 ==> min - min == 0;
invariant b42 ==> min - min == 1;
invariant b43 ==> min - min <= 0;
invariant b44 ==> min - min <= 1;
invariant b45 ==> min - 0 == 0;
invariant b46 ==> min - 0 == 1;
invariant b47 ==> min - 0 <= 0;
invariant b48 ==> min - 0 <= 1;
invariant b49 ==> 0 - N == 0;
invariant b50 ==> 0 - N == 1;
invariant b51 ==> 0 - N <= 0;
invariant b52 ==> 0 - N <= 1;
invariant b53 ==> 0 - n == 0;
invariant b54 ==> 0 - n == 1;
invariant b55 ==> 0 - n <= 0;
invariant b56 ==> 0 - n <= 1;
invariant b57 ==> 0 - min == 0;
invariant b58 ==> 0 - min == 1;
invariant b59 ==> 0 - min <= 0;
invariant b60 ==> 0 - min <= 1;
invariant b61 ==> 0 - 0 == 0;
invariant b62 ==> 0 - 0 == 1;
invariant b63 ==> 0 - 0 <= 0;
invariant b64 ==> 0 - 0 <= 1;
invariant b65 ==> (forall i: int :: 0 <= i && i < N -1 ==> N <= a[i]);
invariant b66 ==> (forall i: int :: 0 <= i && i < N +0 ==> N <= a[i]);
invariant b67 ==> (forall i: int :: 0 <= i && i < N +1 ==> N <= a[i]);
invariant b68 ==> (forall i: int :: 0 <= i && i < N -1 ==> n <= a[i]);
invariant b69 ==> (forall i: int :: 0 <= i && i < N +0 ==> n <= a[i]);
invariant b70 ==> (forall i: int :: 0 <= i && i < N +1 ==> n <= a[i]);
invariant b71 ==> (forall i: int :: 0 <= i && i < N -1 ==> min <= a[i]);
invariant b72 ==> (forall i: int :: 0 <= i && i < N +0 ==> min <= a[i]);
invariant b73 ==> (forall i: int :: 0 <= i && i < N +1 ==> min <= a[i]);
invariant b74 ==> (forall i: int :: 0 <= i && i < n -1 ==> N <= a[i]);
invariant b75 ==> (forall i: int :: 0 <= i && i < n +0 ==> N <= a[i]);
invariant b76 ==> (forall i: int :: 0 <= i && i < n +1 ==> N <= a[i]);
invariant b77 ==> (forall i: int :: 0 <= i && i < n -1 ==> n <= a[i]);
invariant b78 ==> (forall i: int :: 0 <= i && i < n +0 ==> n <= a[i]);
invariant b79 ==> (forall i: int :: 0 <= i && i < n +1 ==> n <= a[i]);
invariant b80 ==> (forall i: int :: 0 <= i && i < n -1 ==> min <= a[i]);
invariant b81 ==> (forall i: int :: 0 <= i && i < n +0 ==> min <= a[i]);
invariant b82 ==> (forall i: int :: 0 <= i && i < n +1 ==> min <= a[i]);
invariant b83 ==> (forall i: int :: 0 <= i && i < min -1 ==> N <= a[i]);
invariant b84 ==> (forall i: int :: 0 <= i && i < min +0 ==> N <= a[i]);
invariant b85 ==> (forall i: int :: 0 <= i && i < min +1 ==> N <= a[i]);
invariant b86 ==> (forall i: int :: 0 <= i && i < min -1 ==> n <= a[i]);
invariant b87 ==> (forall i: int :: 0 <= i && i < min +0 ==> n <= a[i]);
invariant b88 ==> (forall i: int :: 0 <= i && i < min +1 ==> n <= a[i]);
invariant b89 ==> (forall i: int :: 0 <= i && i < min -1 ==> min <= a[i]);
invariant b90 ==> (forall i: int :: 0 <= i && i < min +0 ==> min <= a[i]);
invariant b91 ==> (forall i: int :: 0 <= i && i < min +1 ==> min <= a[i]);
/* 
invariant ((0 <= n && n <= N));
invariant ((forall j: int :: 0 <= j && j < n ==> min <= a[j]));
*/ 
{ 
if (a[n] < min)
{ 
min := a[n];
} 
n := n + 1;
} 
assert (forall i: int :: 0 <= i && i < N ==> min <= a[i]);
} 
const {:existential true} b1 : bool;
const {:existential true} b2 : bool;
const {:existential true} b3 : bool;
const {:existential true} b4 : bool;
const {:existential true} b5 : bool;
const {:existential true} b6 : bool;
const {:existential true} b7 : bool;
const {:existential true} b8 : bool;
const {:existential true} b9 : bool;
const {:existential true} b10 : bool;
const {:existential true} b11 : bool;
const {:existential true} b12 : bool;
const {:existential true} b13 : bool;
const {:existential true} b14 : bool;
const {:existential true} b15 : bool;
const {:existential true} b16 : bool;
const {:existential true} b17 : bool;
const {:existential true} b18 : bool;
const {:existential true} b19 : bool;
const {:existential true} b20 : bool;
const {:existential true} b21 : bool;
const {:existential true} b22 : bool;
const {:existential true} b23 : bool;
const {:existential true} b24 : bool;
const {:existential true} b25 : bool;
const {:existential true} b26 : bool;
const {:existential true} b27 : bool;
const {:existential true} b28 : bool;
const {:existential true} b29 : bool;
const {:existential true} b30 : bool;
const {:existential true} b31 : bool;
const {:existential true} b32 : bool;
const {:existential true} b33 : bool;
const {:existential true} b34 : bool;
const {:existential true} b35 : bool;
const {:existential true} b36 : bool;
const {:existential true} b37 : bool;
const {:existential true} b38 : bool;
const {:existential true} b39 : bool;
const {:existential true} b40 : bool;
const {:existential true} b41 : bool;
const {:existential true} b42 : bool;
const {:existential true} b43 : bool;
const {:existential true} b44 : bool;
const {:existential true} b45 : bool;
const {:existential true} b46 : bool;
const {:existential true} b47 : bool;
const {:existential true} b48 : bool;
const {:existential true} b49 : bool;
const {:existential true} b50 : bool;
const {:existential true} b51 : bool;
const {:existential true} b52 : bool;
const {:existential true} b53 : bool;
const {:existential true} b54 : bool;
const {:existential true} b55 : bool;
const {:existential true} b56 : bool;
const {:existential true} b57 : bool;
const {:existential true} b58 : bool;
const {:existential true} b59 : bool;
const {:existential true} b60 : bool;
const {:existential true} b61 : bool;
const {:existential true} b62 : bool;
const {:existential true} b63 : bool;
const {:existential true} b64 : bool;
const {:existential true} b65 : bool;
const {:existential true} b66 : bool;
const {:existential true} b67 : bool;
const {:existential true} b68 : bool;
const {:existential true} b69 : bool;
const {:existential true} b70 : bool;
const {:existential true} b71 : bool;
const {:existential true} b72 : bool;
const {:existential true} b73 : bool;
const {:existential true} b74 : bool;
const {:existential true} b75 : bool;
const {:existential true} b76 : bool;
const {:existential true} b77 : bool;
const {:existential true} b78 : bool;
const {:existential true} b79 : bool;
const {:existential true} b80 : bool;
const {:existential true} b81 : bool;
const {:existential true} b82 : bool;
const {:existential true} b83 : bool;
const {:existential true} b84 : bool;
const {:existential true} b85 : bool;
const {:existential true} b86 : bool;
const {:existential true} b87 : bool;
const {:existential true} b88 : bool;
const {:existential true} b89 : bool;
const {:existential true} b90 : bool;
const {:existential true} b91 : bool;
